/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kpanikka <kpanikka@student.42abudhabi.ae>  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/01/01 11:32:22 by kpanikka          #+#    #+#             */
/*   Updated: 2022/01/09 16:52:46 by kpanikka         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */
#include "libft.h"
#include <stdio.h>

static void	ft_free(char **s, int i)
{
	if (!s)
	{
		while (i-- != 0)
			free(s[i]);
		free(s);
	}
}

char **ft_split(char const *s, char c)
{
	int i;
	char *ptr;
	char **p;
	char *ptr_loc;

	if(!s)
		return (NULL);
	i = 0;
	ptr = (char *) ft_strtrim(s, &c);
	if(!ptr)
		return (NULL);
	if(*ptr == '\0')
		return ((char **)ft_calloc(1,sizeof(char **)));
	ptr_loc = ptr;
	while((ptr = (ft_strchr(ptr, c))) != NULL)
		if(*(ptr++ - 1) != c)
			i++;
	p = (char **) malloc((i + 2)*sizeof(char **));
	if(!p)
	{
		free(ptr_loc);
		return (NULL);
	}
	ptr = ptr_loc;
	i = 0;
	p[i] = ptr;
	while((ptr = (ft_strchr(ptr, c))) != NULL)
	{
		while(*ptr == c)
		{
			*(ptr) = '\0';
			if(*(ptr + 1) != c)
			{
				p[i] = ft_strdup(p[i]);
				if(!p[i])
				{
					free(ptr_loc);
					ft_free(p, i);
					return (NULL);
				}
				p[++i] = ptr + 1;
			}
			ptr++;
		}
	}
	p[i] = ft_strdup(p[i]);
	free(ptr_loc);
	if(!p[i])
	{
		ft_free(p, i);
		return (NULL);
	}
	p[i + 1] = NULL;
	return (p);
}
